
#ifndef __CN_LOADER_HPP__
#define __CN_LOADER_HPP__

/*---------------------------------------------------------------------------*/

#include "connector/ih/cn_iloader.hpp"

/*---------------------------------------------------------------------------*/

namespace Framework {
namespace Core {
namespace Connector {

/*---------------------------------------------------------------------------*/

struct IPlugin;

/*---------------------------------------------------------------------------*/

class Loader
	:	public Tools::Core::BaseWrapper< ILoader >
{

/*---------------------------------------------------------------------------*/

public:

/*---------------------------------------------------------------------------*/

	Loader();

	virtual ~Loader();

/*---------------------------------------------------------------------------*/

	/*virtual*/ void load( const InitData& _initData );

	/*virtual*/ void unload();

/*---------------------------------------------------------------------------*/

private:

/*---------------------------------------------------------------------------*/

	boost::intrusive_ptr< IPlugin > m_connector;

/*---------------------------------------------------------------------------*/

};

/*---------------------------------------------------------------------------*/

} // namespace Connector
} // namespace Core
} // namespace Framework

/*---------------------------------------------------------------------------*/

#endif // __CN_LOADER_HPP__
