
#ifndef __PM_LOADER_HPP__
#define __PM_LOADER_HPP__

/*---------------------------------------------------------------------------*/

#include "plugins_manager/ih/pm_iloader.hpp"

/*---------------------------------------------------------------------------*/

namespace Framework {
namespace Core {
namespace PluginsManager {

/*---------------------------------------------------------------------------*/

struct IPluginInstance;

/*---------------------------------------------------------------------------*/

class Loader
	:	public Tools::Core::BaseWrapper< ILoader >
{

/*---------------------------------------------------------------------------*/

public:

/*---------------------------------------------------------------------------*/

	Loader();

	virtual ~Loader();

/*---------------------------------------------------------------------------*/

	/*virtual*/ void load( const std::string& _pluginsDirectory );

	/*virtual*/ void unload();

/*---------------------------------------------------------------------------*/

private:

/*---------------------------------------------------------------------------*/

	boost::intrusive_ptr< IPluginInstance > m_connector;

/*---------------------------------------------------------------------------*/

};

/*---------------------------------------------------------------------------*/

} // namespace PluginsManager
} // namespace Core
} // namespace Framework

/*---------------------------------------------------------------------------*/

#endif // __PM_LOADER_HPP__
